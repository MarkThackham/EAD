
R version 4.0.5 (2021-03-31) -- "Shake and Throw"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> #===============================================================
> # 
> # Name:     03 Analyse FMData
> # 
> # Date:     12/04/2020
> # 
> # Author:   MT
> # 
> # Purpose:  Stack monthly EAD files
> #
> # Reference: https://capitalmarkets.fanniemae.com/media/9066/display
> #
> # Step 1: Packages, locations and names
> # Step 2: Read in and prepare stacked data
> # Step 3: Read out final modeling dataset
> #
> #===============================================================
> 
> 
> #===============================================================
> # Step 1: Packages, locations and names
> 
> # Packages
> library(data.table)
data.table 1.13.6 using 2 threads (see ?getDTthreads).  Latest news: r-datatable.com
> library(scales)
> library(tidyverse)
-- Attaching packages ----------------------------------------------------------- tidyverse 1.3.0 --
v ggplot2 3.3.2     v purrr   0.3.4
v tibble  3.0.6     v dplyr   1.0.2
v tidyr   1.1.2     v stringr 1.4.0
v readr   1.3.1     v forcats 0.5.0
-- Conflicts -------------------------------------------------------------- tidyverse_conflicts() --
x dplyr::between()    masks data.table::between()
x readr::col_factor() masks scales::col_factor()
x purrr::discard()    masks scales::discard()
x dplyr::filter()     masks stats::filter()
x dplyr::first()      masks data.table::first()
x dplyr::lag()        masks stats::lag()
x dplyr::last()       masks data.table::last()
x purrr::transpose()  masks data.table::transpose()
> 
> # Prep data location
> prep.loc='R:/FMData/02 PrepData/'
> 
> # Define file names
> filename=paste0(prep.loc, 'stack_FM_EAD_Data.csv')
> 
> options(scipen=999)
> 
> #===============================================================
> 
> 
> #===============================================================
> # Step 2: Read in and prepare stacked data
> fmdata = fread(filename, sep = ",")
> 
> # Remove unecessary features, reorder some features
> fmdata2 = fmdata %>%
+   
+   # Rename EAD and FILE
+   mutate(EAD=CURRENT_UPB, FILE=file) %>%
+   
+   # Remove unnecessary features
+   select(-ACT_PERIOD, -SELLER, -CURR_RATE, -LOAN_AGE, -REM_MONTHS, 
+          -ADJ_REM_MONTHS, -PMT_HISTORY, MOD_FLAG, -DLQ_STATUS_NUM, 
+          -CURRENT_UPB, -LAG12_CURRENT_UPB, -LAG24_CURRENT_UPB, 
+          -DLQ_STATUS, -MOD_FLAG, -file)%>%
+   
+   # Reorder features
+   relocate(LOAN_ID, DATE, FILE, EAD) %>%
+   
+   # Remove implausible values of EAD
+   filter(EAD>=1000)
> #===============================================================
> 
> 
> #===============================================================
> # Step 3: Read out final modeling dataset
> 
> # Write out file
> fwrite(fmdata2, file=paste0(prep.loc, 'Final_FM_EAD_Data.csv'))
> #===============================================================
> 